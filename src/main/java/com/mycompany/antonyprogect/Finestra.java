/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.antonyprogect;
import javax.swing.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import java.awt.*;
import javax.swing.JScrollPane;
/**
 *
 * @author anton
 */
public class Finestra extends javax.swing.JFrame {
Iscritto temp;
Vector <Iscritto> vettore=new Vector(1,1);
Vector <Iscritto> vettore2=new Vector(1,1);
JComboBox tendina2=new JComboBox();
JComboBox tendina3=new JComboBox();
JPanel p =new JPanel();
JLabel labcognome=new JLabel("COGNOME");
JLabel labnome=new JLabel("NOME");
JLabel labetà=new JLabel("ETÀ");
JLabel labtype=new JLabel ("TIPO DI ABBONAMENTO");
JTextField txcognome=new JTextField(30);
JTextField txnome=new JTextField(30);
JTextField txetà=new JTextField(30);
JComboBox tendina=new JComboBox();
    public Finestra() {
        pannello();
        initComponents();
        tendina3.addItem("Scegli una categoria");
        tendina3.addItem("COGNOME");
        tendina3.addItem("NOME");
        tendina3.addItem("ETA");
        tendina3.addItem("ABBONAMENTO");
        tendina.addItem("INTERO");
        tendina.addItem("RIDOTTO");
        lettura();
    }
    public void pannello()
    {
        p.setLayout(new GridLayout(3,2));
        p.add(labcognome);
        p.add(txcognome);
        p.add(labnome);
        p.add(txnome);
        p.add(labetà);
        p.add(txetà);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        inserisci = new javax.swing.JButton();
        visualizza = new javax.swing.JButton();
        ricerca = new javax.swing.JButton();
        elimina = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        labtitolo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jInternalFrame2.setVisible(true);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Sviluppato da Tina Antony\nVersione 1.6.0");
        jScrollPane2.setViewportView(jTextArea1);

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\antony file\\informatica\\netbeans esercizi\\iorestoacasa.png")); // NOI18N

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jInternalFrame2Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel1)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Info", jInternalFrame2);

        jInternalFrame1.setVisible(true);

        area.setEditable(false);
        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        inserisci.setText("Inserisci");
        inserisci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserisciActionPerformed(evt);
            }
        });

        visualizza.setText("Visualizza");
        visualizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizzaActionPerformed(evt);
            }
        });

        ricerca.setText("Ricerca");
        ricerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ricercaActionPerformed(evt);
            }
        });

        elimina.setText("Elimina");
        elimina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminaActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        labtitolo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labtitolo.setText("NUOVA ISCRIZIONE");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(inserisci)
                        .addGap(18, 18, 18)
                        .addComponent(visualizza)
                        .addGap(16, 16, 16)
                        .addComponent(ricerca)
                        .addGap(18, 18, 18)
                        .addComponent(elimina)
                        .addGap(18, 18, 18)
                        .addComponent(reset)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(labtitolo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(labtitolo)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inserisci)
                    .addComponent(visualizza)
                    .addComponent(ricerca)
                    .addComponent(reset)
                    .addComponent(elimina))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gestione", jInternalFrame1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inserisciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserisciActionPerformed
        aggiungi();
    }//GEN-LAST:event_inserisciActionPerformed

    private void ricercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ricercaActionPerformed
        ricerca();
    }//GEN-LAST:event_ricercaActionPerformed

    private void visualizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizzaActionPerformed
        visualizza();
    }//GEN-LAST:event_visualizzaActionPerformed

    private void eliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminaActionPerformed
       elimina();
    }//GEN-LAST:event_eliminaActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        reset();
    }//GEN-LAST:event_resetActionPerformed
    public void lettura()
    {
        try
        {
            File fl=new File("Palestra.dat");
            if(fl.exists())
            {
                FileInputStream f=new FileInputStream("Palestra.dat");
                ObjectInputStream fIN=new ObjectInputStream(f);
                vettore=(Vector<Iscritto>)fIN.readObject();
                f.close();
                if(vettore.size()==0)
                {
                    JOptionPane.showMessageDialog(null, "Non sono presenti iscritti");
                }
                visualizza();
                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"File non esistente");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Operazione annullata");
        }
    }
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try
        {
            FileOutputStream f=new FileOutputStream("Palestra.dat");
            ObjectOutputStream fOUT=new ObjectOutputStream(f);
            fOUT.writeObject(vettore);
            fOUT.flush();
            f.close();
            JOptionPane.showMessageDialog(null,"Caricato con successo");
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(null,e.getMessage());
        }
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing
    public void elimina(){
       int pulsante=JOptionPane.showConfirmDialog(null,tendina3,"Inserimento1",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
       int categoria=tendina3.getSelectedIndex();
       
       if(pulsante==JOptionPane.YES_OPTION)
       {
             switch (categoria)
            {
                case 1: elimina_cognome(); break;
                case 2: elimina_nome(); break;
                case 3: elimina_età();break;
                case 4:elimina_abbonamento();break;
            }
       }
       else if(pulsante==JOptionPane.NO_OPTION ||pulsante==JOptionPane.CANCEL_OPTION)
       {
           
       }
    }
    public void elimina_cognome()
    {
       String cogn= JOptionPane.showInputDialog("Inserisci il cognome dell'iscrittoda ricercare");
       boolean found=false;
       int cont=0;
           if(cogn!=null)
           {
                for(int i=0;i<vettore.size();i++)
                {
                    temp=(Iscritto)vettore.elementAt(i);
                    if(temp.cognome.toLowerCase().equals(cogn.toLowerCase()))
                    {
                        found=true;
                        vettore2.addElement(temp);
                        tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                    }
                }
                if(vettore2.size()>1)
                {
                   JOptionPane.showMessageDialog(null,tendina2,"Scegli un parametro \n",JOptionPane.QUESTION_MESSAGE);
                   scelta1();
                }
                else
                {
                    if(found==true)
                    {
                        scelta1();
                    }
                } 
                svuotaTendina();
                if(found==false)
                {
                    JOptionPane.showMessageDialog(null,"Il cognome dell'iscritto non è stato trovato o il parametro non è stato inserito");
                }
           }
           else if(cogn==null)
           {
                JOptionPane.showMessageDialog(null,"Non è stato inserito nessun parametro");
           }
       }
                  
    public void elimina_nome()
    {
       String name= JOptionPane.showInputDialog("Inserisci il nome dell'iscritto da ricercare");
       boolean found=false;
       try
       {
        if(name!=null)
        {
             for(int i=0;i<vettore.size();i++)
             {
                 temp=vettore.elementAt(i);
                 if(temp.nome.toLowerCase().equals(name.toLowerCase()))
                 {
                     found=true;
                     vettore2.addElement(temp); 
                     tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                 }
             }
             if(vettore2.size()>1)
             {
                JOptionPane.showConfirmDialog(null,tendina2,"Inserimento",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                scelta1();
             }
             else
             {
                 if(found==true)
                      scelta1();
             }
             svuotaTendina();
             if(found==false)
             {
                JOptionPane.showMessageDialog(null,"Il nome dell'iscritto non è stato trovato o il parametro non è stato inserito");
             }
        }
             else if(name==null)
            {
                JOptionPane.showMessageDialog(null,"Non è stato inserito nessun parametro");
            }
       }
       catch(Exception g)
       {
           System.out.println("Errore");
       }
    }
    public void elimina_età()
    {
       try
       {
           double age=Double.parseDouble(JOptionPane.showInputDialog("Inserisci il nome dell'iscritto da ricercare"));
           boolean found=false;
                for(int i=0;i<vettore.size();i++)
                {
                    temp=vettore.elementAt(i);
                    if(temp.età==age)
                     {
                         found=true;
                         vettore2.addElement(temp); 
                         tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                     }
                }
                if(vettore2.size()>1)
                {
                   JOptionPane.showConfirmDialog(null,tendina2,"Inserimento",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                   scelta1();
                }
                else
                {
                   if(found==true)
                        scelta1();
                }
                svuotaTendina();
                if(found==false)
                {
                    JOptionPane.showMessageDialog(null,"Il nome dell'iscritto non è stato trovato");
                }
           }
           catch(Exception g)
            {
                System.out.println("Errore");
            }
        }
       
    public void elimina_abbonamento()
    {
        try
        {
            
           String abb= JOptionPane.showInputDialog("Inserisci il tipo di abbonamento  dell'iscritto da ricercare");
           boolean found=false;
           if(abb!=null)
            {
                for(int i=0;i<vettore.size();i++)
                {
                    temp=vettore.elementAt(i);
                    if(temp.abbonamento.toLowerCase().equals(abb.toLowerCase()))
                    {
                        found=true;
                        vettore2.addElement(temp); 
                        tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                    }
                }
                if(vettore2.size()>1)
                {
                   JOptionPane.showConfirmDialog(null,tendina2,"Inserimento",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                   scelta1();
                }
                else
                {
                   if(found==true)
                             scelta1(); 
                }
                svuotaTendina();
                if(found==false)
                {
                    JOptionPane.showMessageDialog(null,"Non è stato trovto alcun iscritto con questo tipo di abbonamento o il parametro non è stato inserito");
                }
                else if(abb==null)
                {
                    JOptionPane.showMessageDialog(null,"Non è stato inserito nessun parametro");
                }
            }
        }
        catch(Exception g)
        {
            System.out.println("Errore");
        }
    }
    public void scelta1()
    {
        int choice=tendina2.getSelectedIndex();
        for(int i=0;i<vettore2.size();i++)
        {
            if(choice==i)
            {
               temp=vettore2.elementAt(i);
               JOptionPane.showMessageDialog(null,"Nome:"+temp.nome+"\n"+"Cognome:"+temp.cognome+"\n"+"Età:"+temp.età+"\n"+"Abbonamento:"+temp.abbonamento);
               vettore.removeElementAt(i);
            }
        }
        int pulsante=JOptionPane.showConfirmDialog(null,"Sei sicuro di voler eliminare questo elemento?","Conferma eliminazione",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(pulsante==JOptionPane.OK_OPTION) vettore.removeElement(temp);
        visualizza();
        
    }
    public void ricerca()
    {
       int pulsante=JOptionPane.showConfirmDialog(null,tendina3,"Inserimento1",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
       int categoria=tendina3.getSelectedIndex();
       if(pulsante==JOptionPane.YES_OPTION)
       {
            switch(categoria)
            {
                case 1: ricerca_cognome(); break;
                case 2: ricerca_nome(); break;
                case 3: ricerca_età(); break;
                case 4: ricerca_abbonamento(); break;
            }
       }
       else if(pulsante==JOptionPane.NO_OPTION)
       {
           
       }
       
    }
    public void ricerca_cognome()
    {
        
        try
        {
           String cogn= JOptionPane.showInputDialog("Inserisci il cognome dell'iscrittoda ricercare");
           boolean found=false;
           int cont=0;
           if(cogn!=null)
           {
                for(int i=0;i<vettore.size();i++)
                {
                    temp=(Iscritto)vettore.elementAt(i);
                    if(temp.cognome.toLowerCase().equals(cogn.toLowerCase()))
                    {
                        found=true;
                        vettore2.addElement(temp);
                        tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                    }
                }
                if(vettore2.size()>1)
                {
                   JOptionPane.showMessageDialog(null,tendina2,"Scegli un parametro \n",JOptionPane.QUESTION_MESSAGE);
                   scelta();
                }
                else
                {
                    if(found==true)
                    {
                        scelta();
                    }
                } 
                svuotaTendina();
                if(found==false)
                {
                    JOptionPane.showMessageDialog(null,"Il cognome dell'iscritto non è stato trovato o il parametro non è stato inserito");
                }
           }
           else if(cogn==null)
           {
                JOptionPane.showMessageDialog(null,"Non è stato inserito nessun parametro");
           }
        }
        catch(Exception g)
        {
            System.out.println("ERRORE");
        }
    }
    public void ricerca_nome()
    {
        try
        {
           String name= JOptionPane.showInputDialog("Inserisci il nome dell'iscritto da ricercare");
           boolean found=false;
           if(name!=null)
           {
                for(int i=0;i<vettore.size();i++)
                {
                    temp=vettore.elementAt(i);
                    if(temp.nome.toLowerCase().equals(name.toLowerCase()))
                    {
                        found=true;
                        vettore2.addElement(temp); 
                        tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                    }
                }
                if(vettore2.size()>1)
                {
                   JOptionPane.showConfirmDialog(null,tendina2,"Inserimento",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                   scelta();
                }
                else
                {
                    if(found==true)
                    scelta();
                }
                svuotaTendina();
                if(found==false)
                {
                    JOptionPane.showMessageDialog(null,"Il nome dell'iscritto non è stato trovato o parametro non iserito");
                }
           }
           else if(name==null)
           {
               JOptionPane.showMessageDialog(null,"Non è stato inserito nessun parametro");
           }
        }
        catch(Exception g)
        {
            System.out.println("Errore");
        }
    }
    public void ricerca_età()
    {
        try
        {
            double age=Double.parseDouble(JOptionPane.showInputDialog("Inserisci il nome dell'iscritto da ricercare"));
            boolean found=false;
            for(int i=0;i<vettore.size();i++)
            {
                temp=vettore.elementAt(i);
                if(temp.età==age)
                {
                    found=true;
                    vettore2.addElement(temp); 
                    tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                }
            }
            if(vettore2.size()>1)
            {
               JOptionPane.showConfirmDialog(null,tendina2,"Inserimento",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
               scelta();
            }
            else
            {
               if(found==true)
                    scelta();
            }
            svuotaTendina();
            if(found==false)
            {
                JOptionPane.showMessageDialog(null,"Il nome dell'iscritto non è stato trovato");
                area.setText("Nome \t Cognome \t Età \t Abbonamento\n");
            }
        }
        catch(Exception g)
        {
            System.out.println("Errore");
        }
    }
    public void ricerca_abbonamento()
    {
        try
        {
           String abb= JOptionPane.showInputDialog("Inserisci il tipo di abbonamento  dell'iscritto da ricercare");
           boolean found=false;
            if(abb!=null)
            {
                for(int i=0;i<vettore.size();i++)
                {
                    temp=vettore.elementAt(i);
                    if(temp.abbonamento.toLowerCase().equals(abb.toLowerCase()))
                    {
                        found=true;
                        vettore2.addElement(temp); 
                        tendina2.addItem(temp.cognome+"   "+temp.nome+"   "+temp.età+"   "+temp.abbonamento);
                    }
                }
                if(vettore2.size()>1)
                {
                   JOptionPane.showConfirmDialog(null,tendina2,"Inserimento",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
                   scelta();
                }
                else
                {
                   if(found==true)
                             scelta(); 
                }
                svuotaTendina();
                if(found==false)
                {
                    JOptionPane.showMessageDialog(null,"Non è stato trovto alcun iscritto con questo tipo di abbonamento o parametro non inserito");
                    area.setText("Nome \t Cognome \t Età \t Abbonamento\n");
                }
            }
            else if(abb==null)
            {
                JOptionPane.showMessageDialog(null,"Non è stato inserito nessun parametro");
            }
        }
        catch(Exception g)
        {
            System.out.println("Errore");
        }
    }
    public void svuotaTendina()
    {
       tendina2.removeAllItems();
       for(int i=vettore2.size()-1;i>=0;i--)
       {
           vettore2.removeElementAt(i);
       }
    }
    public void scelta()
    {
        int choice=tendina2.getSelectedIndex();
        for(int i=0;i<vettore2.size();i++)
        {
            if(choice==i)
            {
               temp=vettore2.elementAt(i);
               JOptionPane.showMessageDialog(null,"Nome:"+temp.nome+"\n"+"Cognome:"+temp.cognome+"\n"+"Età:"+temp.età+"\n"+"Abbonamento:"+temp.abbonamento);
            }
        }
    }
    public void aggiungi()
    {
        try
        {
            JOptionPane.showMessageDialog(null,p,"Inserimento",JOptionPane.YES_NO_CANCEL_OPTION);
           int scelta=tendina.getSelectedIndex();
           switch(scelta)
           {
               case 0:
               temp=new Iscritto(txcognome.getText(),txnome.getText(),Double.parseDouble(txetà.getText()),"Intero");
               break;
               case 1:
               temp=new Iscritto(txcognome.getText(),txnome.getText(),Double.parseDouble(txetà.getText()),"Ridotto");
               break;
           }
           vettore.addElement(temp);
           svuota();
           JOptionPane.showMessageDialog(null,"Iscritto aggiunto");
           ordina();
           visualizza();
        }
        catch(Exception e)
        {
           JOptionPane.showMessageDialog(null,"OPERAZIONE ANNULLATA"); 
        }
    }
    /**
     * @param args the command line arguments
     */
    public void ordina()
    {
        if(vettore.size()>1)
        {
            Iscritto temp=null;
            for(int i=0;i<vettore.size()-1;i++)
            {
                for(int j=i+1;j<vettore.size();j++)
                {
                    vettore.elementAt(i).cognome.toLowerCase();
                    int compare=vettore.elementAt(i).cognome.compareTo(vettore.elementAt(j).cognome);
                    if(compare>0)
                    {
                        temp=vettore.elementAt(i);
                        vettore.setElementAt(vettore.elementAt(j),i);
                        vettore.setElementAt(temp,j);    
                    }
                    int compare1=vettore.elementAt(i).nome.compareTo(vettore.elementAt(j).nome);
                    if(compare1>0)
                    {
                        temp=vettore.elementAt(i);
                        vettore.setElementAt(vettore.elementAt(j),i);
                        vettore.setElementAt(temp,j);    
                    }
                }
            }    
        }
    }
    public void visualizza()
    {
        area.setText("Nome \t Cognome \t Età \t Abbonamento\n");
        for(int i=0;i<vettore.size();i++)
        {
           temp = (Iscritto) vettore.elementAt(i);
           area.append(temp.nome+"\t"+temp.cognome+"\t"+temp.età+"\t"+temp.abbonamento+"\t"+"\n");
        }
    }
    public void svuota()
    {
       txnome.setText("");
       txcognome.setText("");
       txetà.setText("");
    }
    public void reset()
    {
       area.setText("Nome \t Cognome \t Età \t Abbonamento\n");
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Finestra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Finestra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton elimina;
    private javax.swing.JButton inserisci;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labtitolo;
    private javax.swing.JButton reset;
    private javax.swing.JButton ricerca;
    private javax.swing.JButton visualizza;
    // End of variables declaration//GEN-END:variables
}
